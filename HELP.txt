

WELCOME TO OUR BASIC 1 ADDRESS MACHINE SIMULATOR
------------------------------------------------


MAX VALUE FOR ANY REGISTER IS LIMITED
TO -255 ~ 255

ALL ADDRESS MACHINE COMMANDS WILL BE WRITTEN IN
BINARY CODE IN "BINARY.TXT" FILE AND CONVERTED
TO ADDRESS MACHINE COMMANDS IN "1ADDRESS.TXT"

THE APPLICATION CAN RUN ALSO THE ADDRESS MACHINE
COMMANDS FROM "1ADDRESS.TXT"

FOR ANY ERRORS IN "1ADDRESS.TXT", THE PROGRAM
WILL RECEIVE A "BLUESCREEN"(DETAILS ABOUT ERROR)

FOR ANY ERRORS IN "BINARY.TXT" FILE, THE PROGRAM
WILL PRINT THE LINE WITH THAT ERROR

!IMPORTANT! THE "BINARY.TXT" FILE MUST END
WITH A BLANK LINE


LIST OF COMMANDS:
------------------------------------------------


AC - ACCUMULATOR REGISTER (FOR OPERATIONS)
REZ - RESULT REGISTER (TO STORE THE RESULT)
T - TEMPORAL REGISTER (TO STORE TEMPORARY VALUE)
OUT(AC/REZ/T/ALL) - PRINT ALL REGISTER ON SCREEN
LOAD(NUMBER) - WRITE VALUE IN AC REGISTER
STORE(REGISTER) - STORE VALUE IN A REGISTER
ADD(REGISTER/NUMBER) - ADD A NUMBER TO AC
SUB(REGISTER/NUMBER) - SUBTRACT A VALUE FROM AC
MUL(REGISTER/NUMBER) - MULTIPLE AC WITH A VALUE
DIV(REGISTER/NUMBER) - DIVIDE AC WITH A VALUE
INC(REGISTER) - INCREMENT A REGISTER
DEC(REGISTER) - DECREMENT A REGISTER
CLR(REGISTER) - CLEAR A REGISTER
OPP(REGISTER) - OPPOSITE THE VALUE OF A REGISTER
SWAP(REGISTER) - SWAP REGISTERS WITH AC



LIST IN BINARY COMMANDS:
------------------------------------------------


THE SIZE OF BINARY LINE MUST BE 15 BITS SPLIT IN
(OPPR/BBBBBBBB/REG)


!CONVENTION 1 - IF THE FUNCTION DOESN'T USE
A NUMBER, THE SPACE ALLOCATED FOR 'BBBBBBBB'
MUST BE FILLED WITH 0s

!CONVENTION 2 - IF THE FUNCTION DOESN'T USE
A REGISTER, THE SPACE ALLOCATED FOR 'REG'
MUST BE FILLED WITH 0s


OPPR - 4 BITS FOR OPERATIONS
B - 8 BITS FOR NUMBER IN BASE 2
REG - 3 BITS FOR REGISTER



OPERATIONS AND REGISTERS:
------------------------------------------------

OUT = 0000
LOAD = 0001
STORE = 0010
ADD = 0011
SUB = 0100
MUL = 0101
DIV = 0110
INC = 0111
DEC = 1000
CLR = 1001
OPP = 1100
SWAP = 1110
HELP = 1111


AC = 001
REZ = 010
T = 100
ALL = 111


EX: 0001/00110111/000 - LOAD 55
EX: 0000/00000000/111 - OUT ALL



GUI:
-----------------------------------------------


First textbox is for inputs. (left)
Second textbox is for conversion in 1 address
commands. (middle)
Third textbox is for outputs / errors. (right)


The "Functions" button will execute the code
if the entry box are filled with numbers.

Start button will execute the commands from the
input textbox (left side)


